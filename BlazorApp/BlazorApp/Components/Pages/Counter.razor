@page "/counter"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<MyButton class="btn btn-success" OnClick="IncrementCount">MyButton</MyButton>

<div class="mt-3">
    <input @bind="text" @bind:event="oninput" @bind:after="Search">  <!--value="@text" @onchange="OnChange">-->
    <button @onclick="OnClick">Clear</button>
    <p>@text</p>
    <p>@searchResult</p>
</div>
<div class="mt-3">
    <!-- <input @onchange="OnChange"> -->
    <input @oninput="OnInput">
    <p>@text</p>
</div>

<div style="background-color:lightblue" @onmouseover="MouseOver" @onmouseout="MouseOut">
    @divText
</div>

@code {
    private int currentCount = 0;
    string text = "";

    string searchResult = "";
    string divText = "Mouse out";
    private void IncrementCount(MouseEventArgs e)
    {
        currentCount++;
    }
    private void OnInput(ChangeEventArgs e) => text = (string)e.Value!;
    private void MouseOver(MouseEventArgs e) => divText = "Mouse over";
    private void MouseOut(MouseEventArgs e) => divText = "Mouse out";
    private void OnChange(ChangeEventArgs e) => text = (string)e.Value!;
    private void OnClick(MouseEventArgs e) => text = "";

    async Task Search()
    {
        searchResult = "Searching...";
        await Task.Delay(2000);
        searchResult = $"Found {Random.Shared.Next()} results!";
    }
}
    using System.Formats.Asn1;
